version: 2.1

references:
  docker_hub_authentication: &docker_hub_authentication
    auth:
      username: $DOCKERHUB_USER
      password: $DOCKERHUB_PASSWORD

jobs:
  build:
    docker:
      - image: circleci/php:7.4-zts
        <<: *docker_hub_authentication
    steps:
      - checkout
      - run: echo "this is the build job"
  build-and-test:
    docker:
      - image: circleci/php:7.4-zts
        <<: *docker_hub_authentication
        environment:
          APP_ENV: testing
          DB_HOST: 127.0.0.1
          DB_USERNAME: root
          DB_DATABASE: photo_sharing
      - image: mysql:5.7
        command: [ --character-set-server=utf8, --collation-server=utf8_general_ci, --sql_mode=NO_ENGINE_SUBSTITUTION ]
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
          MYSQL_DATABASE: photo_sharing
          MYSQL_ALLOW_EMPTY_oASSWORD: yes
    working_directory: ~/workspace
    steps:
      - checkout
      - restore_cache:
        keys:
          - composer-cache-v1-{{ .Branch }}-{{ checksum "composer.json"}}
      - run:
          name: composer install
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-cache-v1-{{ .Branch }}-{{ checksum "composer.json" }}
          paths:
            - vender
      - presost_to_workspace:
        root: ~/workspace
        paths:
          - .
      - run:
          name: setup for testing
          command: |
            sudo apt update
            sudo apt-get install default-mysql-client
            sudo docker-php-ext-install pdo_mysql
      - run:
          name: make directory
          command: mkdir -p ./test-result
      - run:
          name: wait for setup database
          command: dockeriZe -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: database migration
          command: php artisan migrate
      - run:
          name: unit test
          command: ./vender/bin/phpunit -c ./phpunit.xml --stderr --log-junit ./test/results/phpunit.xml
      - store_test_results:
          path: ./test-results


# ジョブの実行順の指定
workflows:
  build_and_test:
    jobs:
      - build
      - test
